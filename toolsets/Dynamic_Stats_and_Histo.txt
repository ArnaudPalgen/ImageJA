// Dynamic Stats and Histogram Tools
//
// These two macro tools demonstrate how to perform dynamic measurements by
// dragging an ROI around. The "Dynamic Stats Tool" displays statistics in a text
// window and the "Dynamic Histogram Tool" displays a histogram in a plot window.
// 
// Copy this file to the ImageJ/macros/toolsets folder and these macros will 
// appear in the ">>" toolbar menu.

  var xroi,yroi,x,y,x1,y1;
  var leftClick=16;
  var size = 50;

  macro "Dynamic Stats Tool - C000T1d12dT9d12S" {
      getCursorLoc(x, y, z, flags);
      if (selectionType==-1)
           makeRectangle(x-size/2, y-size/2, size, size);
      getSelectionCoordinates(xroi,yroi);
      l=xroi.length;
      xdroi = newArray(l);
      ydroi = newArray(l);
      stype = selectionType();
      title1 = "Dynamic Stats";
      title2 = "["+title1+"]";
      f = title2;
      if (!isOpen(title1)) run("New... ", "name="+title2+" type=[Text File] width=20 height=6");
      while (flags&leftClick!=0) { 
          getCursorLoc(x1, y1, z, flags);
          for (i=0;i<xroi.length;i++) {
              xdroi[i]=xroi[i]+x1-x;
              ydroi[i]=yroi[i]+y1-y;
          }
          makeSelection(stype,xdroi,ydroi);
          getStatistics(area, mean, min, max, std, histogram);
          stats="Area:"+area+"\nMean:"+d2s(mean,2)+"\nMin:"+min+"\nMax:"+max+"\nsd:"+ d2s(std,2);
          print(f, "\\Update:"); 
          print(f, stats);
          wait(10);
      }
  }

  macro "Dynamic Histogram Tool - C000T1d12dT9d12H" {
      getCursorLoc(x, y, z, flags);
      if (selectionType==-1)
           makeRectangle(x-size/2, y-size/2, size, size);
      getSelectionCoordinates(xroi,yroi);
      l=xroi.length;
      xdroi = newArray(l);
      ydroi = newArray(l);
      stype = selectionType();
      byteData = bitDepth==8 || bitDepth==24;
      while (flags&leftClick!=0) {
          getCursorLoc(x1, y1, z, flags);
          for (i=0;i<xroi.length;i++) {
              xdroi[i]=xroi[i]+x1-x;
              ydroi[i]=yroi[i]+y1-y;
          }
          makeSelection(stype,xdroi,ydroi);
          getStatistics(area, mean, min, max, std, histogram);
          stats="Area:"+area+"\nMean:"+ d2s(mean,2)+"\nMin:"+min+"\nMax:"+max+"\nsd:"+ d2s(std,2);
          Plot.create("Dynamic Histogram", "", "count");
          if (byteData) {
               Plot.setLimits(0, 255, 0, getMax(histogram));
               Plot.setColor("blue");
               Plot.add("line", histogram);
          } else {
              Plot.setLimits(min, max, 0, getMax(histogram));
              Plot.setColor("blue");
              getHistogram(values, counts, 256);
              Plot.add("line", values, counts);
          }
          Plot.setColor("red");
          stats="Mean : "+ d2s(mean,2)+"   Min : "+min+"   Max : "+max+"   sd : "+ d2s(std,2);
          Plot.addText(stats, 0, 1.15);
          Plot.setColor("black");
          Plot.update();
      }
  }

  function getMax(a) {
      max=a[0];
      for (i=0;i<a.length;i++) {max=maxOf(max,a[i]);}
      return max;
  }	
